// 通達者のインターフェース
interface Mediator {
  notify(sender: string, message: string): void;
}

// 記録係
class Recorder {
  name: string;

  constructor(name: string) {
    this.name = name;
  }

  receive(message: string) {
    console.log(`[記録係 ${this.name}] 受信: ${message}`);
  }
}

// 宝
class Treasure {
  name: string;
  mediator?: Mediator;

  constructor(name: string) {
    this.name = name;
  }

  setMediator(mediator: Mediator) {
    this.mediator = mediator;
  }

  sendMessage(message: string) {
    console.log(`[宝 ${this.name}] 通達者にメッセージ送信: ${message}`);
    this.mediator?.notify(this.name, message);
  }
}

// 通達者
class MessengerMediator implements Mediator {
  private recorder: Recorder;

  constructor(recorder: Recorder) {
    this.recorder = recorder;
  }

  notify(sender: string, message: string): void {
    console.log(`[通達者] ${sender} からのメッセージを記録係に転送`);
    this.recorder.receive(`From ${sender}: ${message}`);
  }
}
